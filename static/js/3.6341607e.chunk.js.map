{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/store.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","_callSubscriber","console","log","getState","this","subsrcibe","observer","dispatch","action","profileReducer","dialogsReducer","sidebar","sidebarReducer","window","Post","props","className","s","item","src","alt","MyPosts","React","memo","postsElements","reverse","map","p","postBlock","htmlFor","onSubmit","values","addPost","AddNewPostForm","validationSchema","Yup","required","initialValues","type","placeholder","errorMsg","x","error","MyPostsContainer","connect","state","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6341607e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3vB5y\",\"posts\":\"MyPosts_posts__gk6sV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yeH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__alAp3\",\"mainImage\":\"ProfileInfo_mainImage__1f3o3\"};","import profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                { id: 1, message: 'Эйё, че как оно?', likesCount: 12 },\r\n                { id: 2, message: 'Первая мессага', likesCount: 11 },\r\n                { id: 3, message: 'Вторая мессага', likesCount: 0 },\r\n                { id: 4, message: 'Третья мессага', likesCount: -1 },\r\n            ],\r\n            newPostText: 'yo-you-youoy'\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                { id: 1, name: 'Dimych' },\r\n                { id: 2, name: 'Andrew' },\r\n                { id: 3, name: 'Sveta' },\r\n                { id: 4, name: 'Sasha' },\r\n                { id: 5, name: 'Viktor' },\r\n                { id: 6, name: 'Valera' },\r\n            ],\r\n            messages: [\r\n                { id: 1, message: 'Hi' },\r\n                { id: 2, message: 'How is your zen?' },\r\n                { id: 3, message: 'Yo' },\r\n                { id: 4, message: 'Yo' },\r\n                { id: 5, message: 'Yo' },\r\n                { id: 6, message: 'Yo' },\r\n            ],\r\n            newMessageBody: 'hello'\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('State changed');\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subsrcibe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        \r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n\r\n        this._callSubscriber(this._state);\r\n    }\r\n}\r\n\r\nexport default store;\r\n\r\nwindow.store = store;","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={ s.posts }>\r\n            <div className={s.item}>\r\n                <img src=\"https://i.pinimg.com/originals/8b/13/fd/8b13fd45e5a11ce6a173d920ff2a4dea.jpg\" alt=\"\" />\r\n                { props.message };\r\n                <div>\r\n                    <span>like</span> { props.likesCount };\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport x from '../../Login/Login.module.css';\r\nimport Post from './Post/Post';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <label htmlFor='my-posts'>My posts</label>\r\n            <AddNewPostForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    const initialValues = {\r\n        newPostText: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        newPostText: Yup.string().required('Введи сообщение!')\r\n    })\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={props.onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <Form>\r\n                <Field\r\n                    type='textarea'\r\n                    name='newPostText'\r\n                    id='message'\r\n                    placeholder='введи мессагу'\r\n                />\r\n                <ErrorMessage name='newPostText'>\r\n                    {errorMsg => <div className={x.error}>{errorMsg}</div>}\r\n                </ErrorMessage>\r\n                <div>\r\n                    <button type=\"submit\">Add post</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || '--------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input \r\n                    onChange={ onStatusChange } \r\n                    autoFocus={true} \r\n                    onBlur={ deactivateEditMode } \r\n                    value={ status }/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={ status } updateStatus={ updateStatus } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import { addPost } from '../../redux/store';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div>\r\n        <ProfileInfo profile={props.profile} status={ props.status } updateStatus={ props.updateStatus } />\r\n        <MyPostsContainer />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}