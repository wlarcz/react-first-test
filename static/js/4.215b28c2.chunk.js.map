{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","AddMessageForm","validationSchema","Yup","newMessageBody","required","initialValues","onSubmit","type","placeholder","errorMsg","x","error","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Comment","RedirectComponent","this","React","Component"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,4FCYpMC,EAVI,SAACC,GAChB,IAAMC,EAAI,mBAAeD,EAAME,IAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAqBD,EAAMQ,U,iBCAxBC,EANC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,gCCqCpCC,EAAiB,SAACX,GACpB,IAGMY,EAAmBC,IAAW,CAChCC,eAAgBD,MAAaE,SAAS,2FAE1C,OACI,cAAC,IAAD,CACAC,cARkB,CAClBF,eAAgB,IAQhBG,SAAWjB,EAAMiB,SACjBL,iBAAqBA,EAHrB,SAKI,eAAC,IAAD,WACI,cAAC,IAAD,CACIM,KAAK,OACLV,KAAK,iBACLN,GAAG,UACHiB,YAAY,8EAEhB,cAAC,IAAD,CAAcX,KAAK,iBAAnB,SACM,SAAAY,GAAQ,OAAI,qBAAKjB,UAAWkB,IAAEC,MAAlB,SAA2BF,OAE7C,wBAAQF,KAAK,SAAb,4EAMDK,EA5DC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBN,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAC1E4B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE9B,OAC9DsB,EAAMV,eAO3B,OAAKd,EAAMiC,OAGP,sBAAK9B,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAE8B,aAAlB,SACKR,IAGL,sBAAKvB,UAAWC,IAAE2B,SAAlB,UACKD,EACD,cAAC,EAAD,CACAb,SAfU,SAACkB,GACnBnC,EAAMoC,YAAYD,EAAOrB,yBAGH,cAAC,IAAD,CAAUP,GAAI,Y,4CClBxC8B,EAA6B,SAACb,GAAD,MAAY,CACzCS,OAAQT,EAAMc,KAAKL,S,QCcRM,sBACXC,aAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHL,YAAa,SAACtB,GACV2B,EAASC,YAAmB5B,UDNR,SAAC6B,GAAa,IACpCC,EADmC,uKAGjC,OAAKC,KAAK7C,MAAMiC,OACT,cAACU,EAAD,eAAaE,KAAK7C,QADM,cAAC,IAAD,CAAUO,GAAI,eAHZ,GACTuC,IAAMC,WAUtC,OAHqCP,YAAQH,EAARG,CAAoCI,KCG9DL,CAGZhB","file":"static/js/4.215b28c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2jfo4\",\"dialogsItems\":\"Dialogs_dialogsItems__1C62j\",\"active\":\"Dialogs_active__1L7Tf\",\"dialog\":\"Dialogs_dialog__1PWWV\",\"messages\":\"Dialogs_messages__15mYM\",\"message\":\"Dialogs_message__ROOxL\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    const path = `/dialogs/${props.id}`;\r\n    \r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path} >{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { NavLink, Redirect } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport x from '../Login/Login.module.css';\r\nimport Message from './Message/Message';\r\nimport React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n    let newMessageBody = state.newMessageBody;\r\n    let newMessageElement = React.createRef();\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm\r\n                onSubmit={ addNewMessage }\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    const initialValues = {\r\n        newMessageBody: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        newMessageBody: Yup.string().required('Введи сообщение')\r\n    })\r\n    return (\r\n        <Formik\r\n        initialValues={ initialValues }\r\n        onSubmit={ props.onSubmit }\r\n        validationSchema = { validationSchema }\r\n        >\r\n            <Form>\r\n                <Field\r\n                    type='text'\r\n                    name='newMessageBody'\r\n                    id='message'\r\n                    placeholder='введи мессагу'\r\n                />\r\n                <ErrorMessage name='newMessageBody'>\r\n                    { errorMsg => <div className={x.error}>{ errorMsg }</div> }\r\n                </ErrorMessage>\r\n                <button type=\"submit\"> Отправить </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","// import { ReactComponent } from \"*.svg\";\r\nimport React, { ReactComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Comment) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Comment {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}